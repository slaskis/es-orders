syntax = "proto3";

package github.es.order.v1;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option go_package = "order";
option (gogoproto.sizer_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;

service OrderService {
  rpc CreateOrder (OrderNewRequest) returns (OrderResponse);
  rpc AddItem (OrderItemAddRequest) returns (OrderResponse);
  rpc RemoveItem (OrderItemRemoveRequest) returns (OrderResponse);
  rpc ApproveOrder (OrderApproveRequest) returns (OrderResponse);
  rpc RejectOrder (OrderRejectRequest) returns (OrderResponse);
  rpc GetOrder (GetOrderRequest) returns (OrderResponse);
}

enum OrderStatus {
  EMPTY = 0;
  PENDING = 1;
  APPROVED = 2;
  REJECTED = 3;
  FAILED = 4;
}

message Order {
  string id = 1;
  int32 version = 2;
  string name = 3;
  string created_at = 4; // timestamp in iso format
  string updated_at = 5; // timestamp in iso format
  string deleted_at = 6; // timestamp in iso format
  string fulfilled_at = 9; // timestamp in iso format
  string fulfilled_by = 10;

  repeated OrderItem items = 11;
  OrderStatus status = 12;
  string customer_id = 13;
}

message OrderItem {
  string id = 1;
  int32 quantity = 2;
  string updated_at = 4; // timestamp in iso format
  Item item = 3;
}

enum ItemType {
  ITEM_UNKNOWN = 0;
  ITEM_A = 1;
  ITEM_B = 2;
}

message Item {
  string id = 1;
  ItemType type = 2;

}

message NewItem {
  ItemType type = 1;
}
message OrderNewRequest {
  repeated NewItem items = 2;
}

message OrderItemAddRequest {
  string order_id = 1;
  NewItem item = 2;
}

message OrderItemRemoveRequest {
  string order_id = 1;
  string order_item_id = 2;
}

message OrderApproveRequest {
  string id = 1;
  string fulfilled_by = 2;
}

message OrderRejectRequest {
  string id = 1;
  string fulfilled_by = 2;
}

message GetOrderRequest {
  string id = 1;
}

message OrderResponse {
  Order order = 1;
}
