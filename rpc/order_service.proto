syntax = "proto3";

package acme;

import "google/protobuf/timestamp.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option go_package = "rpc";
option (gogoproto.sizer_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;

service OrderService {
  rpc CreateOrder (OrderNewRequest) returns (OrderResponse);
  rpc AddItem (OrderItemAddRequest) returns (OrderResponse);
  rpc RemoveItem (OrderItemRemoveRequest) returns (OrderResponse);
  rpc ApproveOrder (OrderApproveRequest) returns (OrderResponse);
  rpc RejectOrder (OrderRejectRequest) returns (OrderResponse);
  rpc GetOrder (IDRequest) returns (OrderResponse);
}

enum OrderStatus {
  EMPTY = 0;
  PENDING = 1;
  APPROVED = 2;
  REJECTED = 3;
  FAILED = 4;
}

message Order {
  string ID = 1;
  int32 version = 2;
  string name = 3;
  google.protobuf.Timestamp createdAt = 4 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  google.protobuf.Timestamp updatedAt = 5 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  google.protobuf.Timestamp deletedAt = 6 [(gogoproto.stdtime) = true];
  google.protobuf.Timestamp fulfilledAt = 9 [(gogoproto.stdtime) = true];
  string fulfilledBy = 10;

  repeated Item items = 11;
  OrderStatus status = 12;
}

message Item {
  string ID = 1;
  string SKU = 2;
  string description = 3;
  google.protobuf.Timestamp addedAt = 4 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
}

message NewItem {
  string SKU = 1;
  string description = 2;
}

message OrderNewRequest {
  repeated NewItem items = 2;
}

message OrderItemAddRequest {
  string OrderID = 1;
  Item item = 2;
}

message OrderItemRemoveRequest {
  string OrderID = 1;
  string ItemID = 2;
}

message OrderApproveRequest {
  string ID = 1;
  string fulfilledBy = 2;
}

message OrderRejectRequest {
  string ID = 1;
  string fulfilledBy = 2;
}

message OrderResponse {
  Order order = 1;
}

message IDRequest {
  string ID = 1;
}